function LoginInterceptor(e){return{request:function(t){return e.localStorage.token&&(t.headers.Authorization="Bearer "+e.localStorage.token),t}}}var jugendstadtplanLogin=angular.module("jugendstadtplan.login",[]);jugendstadtplanLogin.service("LoginService",function(){var e=!1,t=null;return{isLoggedIn:function(){return e},setLoggedIn:function(t){e=t},setJugendstadtplanUser:function(e){t=e},getJugendstadtplanUser:function(){return t}}}),angular.module("jugendstadtplan.ansprechpartner",[]),angular.module("jugendstadtplan.links",[]),angular.module("jugendstadtplan.pins",["ui.router","jugendstadtplan.links","jugendstadtplan.ansprechpartner","jugendstadtplan.termin"]),angular.module("jugendstadtplan.startseite",["ui.router","leaflet-directive"]),angular.module("jugendstadtplan.termin",[]),angular.module("jugendstadtplan.traeger",["ui.router","jugendstadtplan.login","jugendstadtplan.links","jugendstadtplan.ansprechpartner"]);var Jugendstadtplan=Jugendstadtplan||{};Jugendstadtplan.Controllers=angular.module("jugendstadtplan.controllers",[]),angular.module("jugendstadtplan",["ngResource","ngSanitize","ui.router","leaflet-directive","textAngular","ngFileUpload","jwt-decode","jugendstadtplan.templates","jugendstadtplan.login","jugendstadtplan.api","jugendstadtplan.startseite","jugendstadtplan.pins","jugendstadtplan.traeger","jugendstadtplan.controllers"]).config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/startseite")}]).run(function(){}).controller("AppCtrl",["$scope","LoginService",function(e,t){e.$on("$stateChangeSuccess",function(t,n,r,a,i){angular.isDefined(n.data.pageTitle)&&(e.pageTitle=n.data.pageTitle+" | Jugendstadtplan")}),e.isLoggedIn=function(){return t.isLoggedIn()},e.getJugendstadtplanUser=function(){return t.getJugendstadtplanUser()}}]),Jugendstadtplan.Controllers.controller("AnsprechpartnerFormController",["$scope",function(e){e.newAnsprechpartner={},e.addAnsprechpartner=function(){void 0===e.model.ansprechpartner&&(e.model.ansprechpartner=[]),e.model.ansprechpartner.push(e.newAnsprechpartner),e.newAnsprechpartner={}},e.isAnsprechpartnerValid=function(e){return void 0===e.name||0===e.name.length?!1:void 0!==e.email&&0!==e.email.length}}]),Jugendstadtplan.Controllers.controller("LinksFormController",["$scope",function(e){e.newLink={},e.addLink=function(){void 0===e.model.links&&(e.model.links=[]),e.model.links.push(e.newLink),e.newLink={}},e.isLinkValid=function(e){return void 0===e.titel||0===e.titel.length?!1:void 0!==e.url&&0!==e.url.length}}]),angular.module("jugendstadtplan.pins").config(["$stateProvider",function(e){e.state("Detail: Pin",{url:"/pin/{id:[0-9]+}",views:{main:{controller:"PinDetailController",templateUrl:"app/pins/views/detail.tpl.html"}},resolve:{pinDetail:["$stateParams","Pin",function(e,t){return t.get({},{id:e.id})}]},data:{pageTitle:"Pin"}})}]),Jugendstadtplan.Controllers.controller("PinDetailController",["$scope","pinDetail",function(e,t){e.markers=[],e.center={lat:50.732829246726,lng:7.0937004090117,zoom:13},t.$promise.then(function(){e.pin=t,angular.extend(e,{defaults:{scrollWheelZoom:!1}}),e.center={lat:t.latitude,lng:t.longitude,zoom:15};var n={lat:t.latitude,lng:t.longitude,title:t.titel,focus:!0,message:"<h3>"+t.titel+"</h3>"+t.beschreibung};e.markers.push(n)},function(){angular.extend(e,{defaults:{scrollWheelZoom:!1}})})}]),angular.module("jugendstadtplan.pins").config(["$stateProvider",function(e){e.state("Form: Pin",{url:"/pin/create",views:{main:{controller:"PinFormController",templateUrl:"app/pins/views/form.tpl.html"}},data:{pageTitle:"Pin erstellen"}})}]),Jugendstadtplan.Controllers.controller("PinFormController",["$scope","$location","Pin","Traeger","Kategorie",function(e,t,n,r,a){e.kategorien=a.query(),e.pin=new n,e.pins=n.query(),e.traegers=r.query(),angular.extend(e,{center:{lat:50.732829246726,lng:7.0937004090117,zoom:13},defaults:{scrollWheelZoom:!1},events:{}}),e.pin.markers=[],e.$on("leafletDirectiveMap.click",function(t,n){var r=n.leafletEvent;e.pin.markers[0]={lat:r.latlng.lat,lng:r.latlng.lng,draggable:!0,focus:!0}}),e.newPin=function(){e.pin=new n,e.pin.markers=[],e.editing=!1},e.save=function(){e.pin.id?n.update(e.pin):e.pin.$save().then(function(t){e.pins.push(t)}),e.newPin()},e.setActivePin=function(t){e.pin=t,e.pin.markers=[],null!=t.longitude&&(e.pin.markers[0]={lat:t.latitude,lng:t.longitude,draggable:!0,focus:!0}),e.editing=!0},e.remove=function(t){n["delete"](t,function(){var n=e.pins.indexOf(t);-1!=n&&e.pins.splice(n,1)})},e.barrierefreiheitsgrade=["Gut","Teilweise","Nicht barrierefrei"],e.kostenarten=["Kostenlos","Kostenpflichtig"],e.mindestalters=["ab 12","ab 16","ab 18","ab 21"]}]),angular.module("jugendstadtplan.pins").config(["$stateProvider",function(e){e.state("Liste: Pin",{url:"/pins",views:{main:{controller:"PinsController",templateUrl:"app/pins/views/list.tpl.html"}},data:{pageTitle:"Pins"}})}]),Jugendstadtplan.Controllers.controller("PinsController",["$scope","$location","Pin",function(e,t,n){e.pins=n.query(),e.viewPin=function(e){t.path("/pin/"+e.id)}}]),angular.module("jugendstadtplan.startseite").config(["$stateProvider",function(e){e.state("Startseite",{url:"/startseite",views:{main:{controller:"StartseiteController",templateUrl:"app/startseite/views/startseite.tpl.html"}},data:{pageTitle:"Startseite"}})}]),angular.module("jugendstadtplan.startseite").controller("StartseiteController",["$scope","$location","Pin",function(e,t,n){angular.extend(e,{center:{lat:50.732829246726,lng:7.0937004090117,zoom:13},defaults:{scrollWheelZoom:!1}}),e.markers=[],n.query(function(t){angular.forEach(t,function(t){if(null!=t.longitude){var n={lat:t.latitude,lng:t.longitude,title:t.titel,message:"<h3>"+t.titel+"</h3>"+t.beschreibung+'<small><a href="/#/pin/'+t.id+'">Mehr</a></small>'};e.markers.push(n)}})})}]),Jugendstadtplan.Controllers.controller("TerminFormController",["$scope",function(e){e.wochentage=["Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"],e.newTermin={},e.addTermin=function(){void 0===e.pin.termine&&(e.pin.termine=[]),e.pin.termine.push(e.newTermin),e.newTermin={}},e.isTerminValid=function(e){return void 0===e.beginn||0===e.beginn?!1:e.ganztaegig===!0||void 0!==e.beginn_uhrzeit&&0!==e.beginn_uhrzeit},e.woche_des_monats=[{id:0,label:"Jede Woche"},{id:1,label:"Jede 1. Woche"},{id:2,label:"Jede 2. Woche"},{id:3,label:"Jede 3. Woche"},{id:4,label:"Jede 4. Woche"},{id:5,label:"Jede 5. Woche"}],e.newWiederholung={},e.addWiederholung=function(){void 0===e.newTermin.wiederholungen&&(e.newTermin.wiederholungen=[]),e.newTermin.wiederholungen.push(e.newWiederholung),e.newWiederholung={}},e.isWiederholungValid=function(e){return void 0!==e.wochentag&&0!==e.wochentag}}]),angular.module("jugendstadtplan.traeger").config(["$stateProvider",function(e){e.state("Liste: Traeger",{url:"/traeger",views:{main:{controller:"TraegerController",templateUrl:"app/traeger/views/liste.tpl.html"}},data:{pageTitle:"Träger"}})}]),Jugendstadtplan.Controllers.controller("TraegerController",["$scope","$location","Traeger",function(e,t,n){e.traeger=n.query(),e.viewTraeger=function(e){t.path("/traeger/"+e.id)}}]),angular.module("jugendstadtplan.traeger").config(["$stateProvider",function(e){e.state("Detail: Traeger",{url:"/traeger/{id:[0-9]+}",views:{main:{controller:"TraegerDetailController",templateUrl:"app/traeger/views/detail.tpl.html"}},resolve:{traegerDetail:["$stateParams","Traeger",function(e,t){return t.get({},{id:e.id})}]},data:{pageTitle:"Träger"}})}]),Jugendstadtplan.Controllers.controller("TraegerDetailController",["$scope","traegerDetail",function(e,t){e.traeger=t,angular.extend(e,{center:{lat:50.732829246726,lng:7.0937004090117,zoom:13},defaults:{scrollWheelZoom:!1}}),e.markers=[],t.$promise.then(function(){angular.forEach(t.pins,function(t,n){var r={lat:t.latitude,lng:t.longitude,title:t.titel,message:"<h3>"+t.titel+"</h3>"+t.beschreibung+'<small><a href="/#/pin/'+t.id+'">Mehr</a></small>'};e.markers.push(r)})})}]),angular.module("jugendstadtplan.traeger").config(["$stateProvider",function(e){e.state("Form: Traeger",{url:"/traeger/create",views:{main:{controller:"TraegerFormController",templateUrl:"app/traeger/views/form.tpl.html"}},data:{pageTitle:"Träger erstellen"}})}]),Jugendstadtplan.Controllers.controller("TraegerFormController",["$scope","$location","Traeger","Kategorie","Upload",function(e,t,n,r,a){e.kategorien=r.query(),e.traeger=new n,e.traegers=n.query(),e.newTraeger=function(){e.traeger=new n,e.editing=!1},e.save=function(){e.traeger.id?n.update(e.traeger).then(function(){e.newTraeger()},function(){alert("Ein Träger mit dieser Email-Adresse existiert bereits!")}):e.traeger.$save().then(function(t){e.traegers.push(t),e.newTraeger()},function(){alert("Ein Träger mit dieser Email-Adresse existiert bereits!")})},e.setActiveTraeger=function(t){e.traeger=t,e.editing=!0},e.remove=function(t){n["delete"](t,function(){var n=e.traegers.indexOf(t);-1!=n&&e.traegers.splice(n,1)})},e.onFileSelect=function(t){for(var n=function(t){a.upload({url:"app_dev.php/img/upload",method:"POST",data:{myObj:e.myModelObj},file:t}).progress(function(e){console.log("percent: "+parseInt(100*e.loaded/e.total))}).success(function(n,r,a,i){void 0===e.traeger.bilder&&(e.traeger.bilder=[]),t.tmp_name=n.folder,e.traeger.bilder.push(t)})},r=0;r<t.length;r++){var i=t[r];e.upload=n(i)}},e.newAdresse={},e.addAdresse=function(){void 0===e.traeger.adressen&&(e.traeger.adressen=[]),e.traeger.adressen.push(e.newAdresse),e.newAdresse={}},e.isAdresseValid=function(e){return void 0===e.strasse||0===e.strasse.length?!1:void 0!==e.ort&&0!==e.ort.length}}]),angular.module("jugendstadtplan.traeger").config(["$stateProvider",function(e){e.state("Login: Traeger",{url:"/traeger/login",views:{main:{controller:"TraegerLoginController",templateUrl:"app/traeger/views/login.tpl.html"}},data:{pageTitle:"Einloggen"}})}]),Jugendstadtplan.Controllers.controller("TraegerLoginController",["$scope","$state","$window","LoginService","JwtDecode","Traeger",function(e,t,n,r,a,i){e.traeger=new i,e.login=function(){e.traeger.$login().then(function(e){n.localStorage.token=e.token;var i=a.decode(e.token);r.setLoggedIn(!0),r.setJugendstadtplanUser(i.traeger),t.go("Startseite")},function(t){e.error={msg:"Authentifizierung fehlgeschlagen!"}})}}]),angular.module("plusOne",[]).directive("plusOne",function(){return{link:function(e,t,n){gapi.plusone.render(t[0],{size:"medium",href:"http://bit.ly/ngBoilerplate"})}}});var jugendstadtplanApi=angular.module("jugendstadtplan.api",["ngResource"]),backendPrefix="http://api.jugendstadtplan.dev";jugendstadtplanApi.provider("Pin",function(){this.$get=["$resource",function(e){var t=backendPrefix+"/pins";return e(t,{},{get:{method:"GET",url:t+"/:id",params:{id:"@id"}},update:{method:"PUT",url:t+"/update/:id",params:{id:"@id"},interceptor:LoginInterceptor},save:{method:"POST",url:t+"/create",interceptor:LoginInterceptor},"delete":{method:"DELETE",url:t+"/delete/:id",params:{id:"@id"},interceptor:LoginInterceptor}})}]}),jugendstadtplanApi.provider("Traeger",function(){this.$get=["$resource",function(e){var t=backendPrefix+"/traeger";return e(t,{},{get:{method:"GET",url:t+"/:id",params:{id:"@id"}},update:{method:"PUT",url:t+"/update/:id",params:{id:"@id"},interceptor:LoginInterceptor},save:{method:"POST",url:t+"/create"},"delete":{method:"DELETE",url:t+"/delete/:id",params:{id:"@id"},interceptor:LoginInterceptor},login:{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},url:backendPrefix+"/authentication/traeger_check",transformRequest:function(e,t){var n=[];for(var r in e)n.push(encodeURIComponent(r)+"="+encodeURIComponent(e[r]));return n.join("&")}}})}]}),jugendstadtplanApi.provider("Kategorie",function(){this.$get=["$resource",function(e){var t=backendPrefix+"/kategorie";return e(t)}]});
//# sourceMappingURL=data:application/json;base64,
