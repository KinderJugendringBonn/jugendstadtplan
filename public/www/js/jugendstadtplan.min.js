function LoginInterceptor(e){return{request:function(n){return e.localStorage.token&&(n.headers.Authorization="Bearer "+e.localStorage.token),n}}}var jugendstadtplanLogin=angular.module("jugendstadtplan.login",[]);jugendstadtplanLogin.service("LoginService",function(){var e=!1;return{isLoggedIn:function(){return e},setLoggedIn:function(n){e=n}}}),angular.module("jugendstadtplan.ansprechpartner",[]),angular.module("jugendstadtplan.links",[]),angular.module("jugendstadtplan.pins",["ui.router","jugendstadtplan.links","jugendstadtplan.ansprechpartner","jugendstadtplan.termin"]),angular.module("jugendstadtplan.traeger",["ui.router","jugendstadtplan.links","jugendstadtplan.ansprechpartner","jugendstadtplan.login"]),angular.module("jugendstadtplan.termin",[]),angular.module("jugendstadtplan.startseite",["ui.router","leaflet-directive"]);var Jugendstadtplan=Jugendstadtplan||{};Jugendstadtplan.Controllers=angular.module("jugendstadtplan.controllers",[]),angular.module("jugendstadtplan",["ngResource","ngSanitize","ui.router","leaflet-directive","textAngular","ngFileUpload","jugendstadtplan.templates","jugendstadtplan.login","jugendstadtplan.api","jugendstadtplan.startseite","jugendstadtplan.pins","jugendstadtplan.traeger","jugendstadtplan.controllers"]).config(function(e,n){n.otherwise("/startseite")}).run(function(){}).controller("AppCtrl",["$scope","$location",function(e,n){e.$on("$stateChangeSuccess",function(n,t,r,a,l){angular.isDefined(t.data.pageTitle)&&(e.pageTitle=t.data.pageTitle+" | Jugendstadtplan")})}]),angular.module("plusOne",[]).directive("plusOne",function(){return{link:function(e,n,t){gapi.plusone.render(n[0],{size:"medium",href:"http://bit.ly/ngBoilerplate"})}}});var jugendstadtplanApi=angular.module("jugendstadtplan.api",["ngResource"]),backendPrefix="http://api.jugendstadtplan.dev";jugendstadtplanApi.provider("Pin",function(){this.$get=["$resource",function(e){var n=backendPrefix+"/pins";return e(n,{},{get:{method:"GET",url:n+"/:id",params:{id:"@id"}},update:{method:"PUT",url:n+"/update/:id",params:{id:"@id"},interceptor:LoginInterceptor},save:{method:"POST",url:n+"/create",interceptor:LoginInterceptor},"delete":{method:"DELETE",url:n+"/delete/:id",params:{id:"@id"},interceptor:LoginInterceptor}})}]}),jugendstadtplanApi.provider("Traeger",function(){this.$get=["$resource",function(e){var n=backendPrefix+"/traeger";return e(n,{},{get:{method:"GET",url:n+"/:id",params:{id:"@id"}},update:{method:"PUT",url:n+"/update/:id",params:{id:"@id"},interceptor:LoginInterceptor},save:{method:"POST",url:n+"/create"},"delete":{method:"DELETE",url:n+"/delete/:id",params:{id:"@id"},interceptor:LoginInterceptor},login:{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},url:backendPrefix+"/authentication/traeger_check",transformRequest:function(e,n){var t=[];for(var r in e)t.push(encodeURIComponent(r)+"="+encodeURIComponent(e[r]));return t.join("&")}}})}]}),jugendstadtplanApi.provider("Kategorie",function(){this.$get=["$resource",function(e){var n=backendPrefix+"/kategorie";return e(n)}]}),Jugendstadtplan.Controllers.controller("AnsprechpartnerFormController",["$scope",function(e){e.newAnsprechpartner={},e.addAnsprechpartner=function(){void 0===e.model.ansprechpartner&&(e.model.ansprechpartner=[]),e.model.ansprechpartner.push(e.newAnsprechpartner),e.newAnsprechpartner={}},e.isAnsprechpartnerValid=function(e){return void 0===e.name||0===e.name.length?!1:void 0!==e.email&&0!==e.email.length}}]),Jugendstadtplan.Controllers.controller("LinksFormController",["$scope",function(e){e.newLink={},e.addLink=function(){void 0===e.model.links&&(e.model.links=[]),e.model.links.push(e.newLink),e.newLink={}},e.isLinkValid=function(e){return void 0===e.titel||0===e.titel.length?!1:void 0!==e.url&&0!==e.url.length}}]),angular.module("jugendstadtplan.pins").config(function(e){e.state("Detail: Pin",{url:"/pin/{id:[0-9]+}",views:{main:{controller:"PinDetailController",templateUrl:"app/pins/views/detail.tpl.html"}},resolve:{pinDetail:["$stateParams","Pin",function(e,n){return n.get({},{id:e.id})}]},data:{pageTitle:"Pin"}})}),Jugendstadtplan.Controllers.controller("PinDetailController",["$scope","pinDetail",function(e,n){e.markers=[],e.center={lat:50.732829246726,lng:7.0937004090117,zoom:13},n.$promise.then(function(){e.pin=n,angular.extend(e,{defaults:{scrollWheelZoom:!1}}),e.center={lat:n.latitude,lng:n.longitude,zoom:15};var t={lat:n.latitude,lng:n.longitude,title:n.titel,focus:!0,message:"<h3>"+n.titel+"</h3>"+n.beschreibung};e.markers.push(t)},function(){angular.extend(e,{defaults:{scrollWheelZoom:!1}})})}]),angular.module("jugendstadtplan.pins").config(function(e){e.state("Form: Pin",{url:"/pin/create",views:{main:{controller:"PinFormController",templateUrl:"app/pins/views/form.tpl.html"}},data:{pageTitle:"Pin erstellen"}})}),Jugendstadtplan.Controllers.controller("PinFormController",["$scope","$location","Pin","Traeger","Kategorie",function(e,n,t,r,a){e.kategorien=a.query(),e.pin=new t,e.pins=t.query(),e.traegers=r.query(),angular.extend(e,{center:{lat:50.732829246726,lng:7.0937004090117,zoom:13},defaults:{scrollWheelZoom:!1},events:{}}),e.pin.markers=[],e.$on("leafletDirectiveMap.click",function(n,t){var r=t.leafletEvent;e.pin.markers[0]={lat:r.latlng.lat,lng:r.latlng.lng,draggable:!0,focus:!0}}),e.newPin=function(){e.pin=new t,e.pin.markers=[],e.editing=!1},e.save=function(){e.pin.id?t.update(e.pin):e.pin.$save().then(function(n){e.pins.push(n)}),e.newPin()},e.setActivePin=function(n){e.pin=n,e.pin.markers=[],null!=n.longitude&&(e.pin.markers[0]={lat:n.latitude,lng:n.longitude,draggable:!0,focus:!0}),e.editing=!0},e.remove=function(n){t["delete"](n,function(){var t=e.pins.indexOf(n);-1!=t&&e.pins.splice(t,1)})},e.barrierefreiheitsgrade=["Gut","Teilweise","Nicht barrierefrei"],e.kostenarten=["Kostenlos","Kostenpflichtig"],e.mindestalters=["ab 12","ab 16","ab 18","ab 21"]}]),angular.module("jugendstadtplan.pins").config(function(e){e.state("Liste: Pin",{url:"/pins",views:{main:{controller:"PinsController",templateUrl:"app/pins/views/list.tpl.html"}},data:{pageTitle:"Pins"}})}),Jugendstadtplan.Controllers.controller("PinsController",["$scope","$location","Pin",function(e,n,t){e.pins=t.query(),e.viewPin=function(e){n.path("/pin/"+e.id)}}]),angular.module("jugendstadtplan.traeger").config(function(e){e.state("Liste: Traeger",{url:"/traeger",views:{main:{controller:"TraegerController",templateUrl:"app/traeger/views/liste.tpl.html"}},data:{pageTitle:"Träger"}})}),Jugendstadtplan.Controllers.controller("TraegerController",["$scope","$location","Traeger",function(e,n,t){e.traeger=t.query(),e.viewTraeger=function(e){n.path("/traeger/"+e.id)}}]),angular.module("jugendstadtplan.traeger").config(function(e){e.state("Detail: Traeger",{url:"/traeger/{id:[0-9]+}",views:{main:{controller:"TraegerDetailController",templateUrl:"app/traeger/views/detail.tpl.html"}},resolve:{traegerDetail:["$stateParams","Traeger",function(e,n){return n.get({},{id:e.id})}]},data:{pageTitle:"Träger"}})}),Jugendstadtplan.Controllers.controller("TraegerDetailController",["$scope","traegerDetail",function(e,n){e.traeger=n,angular.extend(e,{center:{lat:50.732829246726,lng:7.0937004090117,zoom:13},defaults:{scrollWheelZoom:!1}}),e.markers=[],n.$promise.then(function(){angular.forEach(n.pins,function(n,t){var r={lat:n.latitude,lng:n.longitude,title:n.titel,message:"<h3>"+n.titel+"</h3>"+n.beschreibung+'<small><a href="/#/pin/'+n.id+'">Mehr</a></small>'};e.markers.push(r)})})}]),angular.module("jugendstadtplan.traeger").config(function(e){e.state("Form: Traeger",{url:"/traeger/create",views:{main:{controller:"TraegerFormController",templateUrl:"app/traeger/views/form.tpl.html"}},data:{pageTitle:"Träger erstellen"}})}),Jugendstadtplan.Controllers.controller("TraegerFormController",["$scope","$location","Traeger","Kategorie","Upload",function(e,n,t,r,a){e.kategorien=r.query(),e.traeger=new t,e.traegers=t.query(),e.newTraeger=function(){e.traeger=new t,e.editing=!1},e.save=function(){e.traeger.id?t.update(e.traeger).then(function(){e.newTraeger()},function(){alert("Ein Träger mit dieser Email-Adresse existiert bereits!")}):e.traeger.$save().then(function(n){e.traegers.push(n),e.newTraeger()},function(){alert("Ein Träger mit dieser Email-Adresse existiert bereits!")})},e.setActiveTraeger=function(n){e.traeger=n,e.editing=!0},e.remove=function(n){t["delete"](n,function(){var t=e.traegers.indexOf(n);-1!=t&&e.traegers.splice(t,1)})},e.onFileSelect=function(n){for(var t=function(n){a.upload({url:"app_dev.php/img/upload",method:"POST",data:{myObj:e.myModelObj},file:n}).progress(function(e){console.log("percent: "+parseInt(100*e.loaded/e.total))}).success(function(t,r,a,l){void 0===e.traeger.bilder&&(e.traeger.bilder=[]),n.tmp_name=t.folder,e.traeger.bilder.push(n)})},r=0;r<n.length;r++){var l=n[r];e.upload=t(l)}},e.newAdresse={},e.addAdresse=function(){void 0===e.traeger.adressen&&(e.traeger.adressen=[]),e.traeger.adressen.push(e.newAdresse),e.newAdresse={}},e.isAdresseValid=function(e){return void 0===e.strasse||0===e.strasse.length?!1:void 0!==e.ort&&0!==e.ort.length}}]),angular.module("jugendstadtplan.traeger").config(function(e){e.state("Login: Traeger",{url:"/traeger/login",views:{main:{controller:"TraegerLoginController",templateUrl:"app/traeger/views/login.tpl.html"}},data:{pageTitle:"Einloggen"}})}),Jugendstadtplan.Controllers.controller("TraegerLoginController",["$scope","$state","$window","LoginService","Traeger",function(e,n,t,r,a){e.traeger=new a,e.login=function(){e.traeger.$login().then(function(e){t.localStorage.token=e.token,r.setLoggedIn(!0),n.go("Startseite")},function(n){e.error={msg:"Authentifizierung fehlgeschlagen!"}})}}]),Jugendstadtplan.Controllers.controller("TerminFormController",["$scope",function(e){e.wochentage=["Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"],e.newTermin={},e.addTermin=function(){void 0===e.pin.termine&&(e.pin.termine=[]),e.pin.termine.push(e.newTermin),e.newTermin={}},e.isTerminValid=function(e){return void 0===e.beginn||0===e.beginn?!1:e.ganztaegig===!0||void 0!==e.beginn_uhrzeit&&0!==e.beginn_uhrzeit},e.woche_des_monats=[{id:0,label:"Jede Woche"},{id:1,label:"Jede 1. Woche"},{id:2,label:"Jede 2. Woche"},{id:3,label:"Jede 3. Woche"},{id:4,label:"Jede 4. Woche"},{id:5,label:"Jede 5. Woche"}],e.newWiederholung={},e.addWiederholung=function(){void 0===e.newTermin.wiederholungen&&(e.newTermin.wiederholungen=[]),e.newTermin.wiederholungen.push(e.newWiederholung),e.newWiederholung={}},e.isWiederholungValid=function(e){return void 0!==e.wochentag&&0!==e.wochentag}}]),angular.module("jugendstadtplan.startseite").config(function(e){e.state("Startseite",{url:"/startseite",views:{main:{controller:"StartseiteController",templateUrl:"app/startseite/views/startseite.tpl.html"}},data:{pageTitle:"Startseite"}})}),angular.module("jugendstadtplan.startseite").controller("StartseiteController",["$scope","$location","Pin",function(e,n,t){angular.extend(e,{center:{lat:50.732829246726,lng:7.0937004090117,zoom:13},defaults:{scrollWheelZoom:!1}}),e.markers=[],t.query(function(n){angular.forEach(n,function(n){if(null!=n.longitude){var t={lat:n.latitude,lng:n.longitude,title:n.titel,message:"<h3>"+n.titel+"</h3>"+n.beschreibung+'<small><a href="/#/pin/'+n.id+'">Mehr</a></small>'};e.markers.push(t)}})})}]);
//# sourceMappingURL=data:application/json;base64,
